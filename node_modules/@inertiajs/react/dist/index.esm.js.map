{
  "version": 3,
  "sources": ["../src/index.ts", "../src/createInertiaApp.ts", "../src/App.ts", "../src/HeadContext.ts", "../src/PageContext.ts", "../src/Deferred.ts", "../src/usePage.ts", "../src/Head.ts", "../src/Link.ts", "../src/useForm.ts", "../src/useRemember.ts", "../src/usePoll.ts", "../src/usePrefetch.ts", "../src/WhenVisible.ts"],
  "sourcesContent": ["import { router as Router } from '@inertiajs/core'\n\nexport const router = Router\nexport { default as createInertiaApp } from './createInertiaApp'\nexport { default as Deferred } from './Deferred'\nexport { default as Head } from './Head'\nexport { InertiaLinkProps, default as Link } from './Link'\nexport { InertiaFormProps, SetDataByObject, SetDataByMethod, SetDataByKeyValuePair, SetDataAction, default as useForm } from './useForm'\nexport { default as usePage } from './usePage'\nexport { default as usePoll } from './usePoll'\nexport { default as usePrefetch } from './usePrefetch'\nexport { default as useRemember } from './useRemember'\nexport { default as WhenVisible } from './WhenVisible'\n", "import { Page, PageProps, PageResolver, router, setupProgress } from '@inertiajs/core'\nimport { ComponentType, FunctionComponent, Key, ReactElement, ReactNode, createElement } from 'react'\nimport { renderToString } from 'react-dom/server'\nimport App from './App'\n\ntype ReactInstance = ReactElement\ntype ReactComponent = ReactNode\n\ntype HeadManagerOnUpdate = (elements: string[]) => void // TODO: When shipped, replace with: Inertia.HeadManagerOnUpdate\ntype HeadManagerTitleCallback = (title: string) => string // TODO: When shipped, replace with: Inertia.HeadManagerTitleCallback\n\ntype AppType<SharedProps extends PageProps = PageProps> = FunctionComponent<\n  {\n    children?: (props: { Component: ComponentType; key: Key; props: Page<SharedProps>['props'] }) => ReactNode\n  } & SetupOptions<unknown, SharedProps>['props']\n>\n\nexport type SetupOptions<ElementType, SharedProps extends PageProps> = {\n  el: ElementType\n  App: AppType\n  props: {\n    initialPage: Page<SharedProps>\n    initialComponent: ReactComponent\n    resolveComponent: PageResolver\n    titleCallback?: HeadManagerTitleCallback\n    onHeadUpdate?: HeadManagerOnUpdate\n  }\n}\n\ntype BaseInertiaAppOptions = {\n  title?: HeadManagerTitleCallback\n  resolve: PageResolver\n}\n\ntype CreateInertiaAppSetupReturnType = ReactInstance | void\ntype InertiaAppOptionsForCSR<SharedProps extends PageProps> = BaseInertiaAppOptions & {\n  id?: string\n  page?: Page | string\n  render?: undefined\n  progress?:\n    | false\n    | {\n        delay?: number\n        color?: string\n        includeCSS?: boolean\n        showSpinner?: boolean\n      }\n  setup(options: SetupOptions<HTMLElement, SharedProps>): CreateInertiaAppSetupReturnType\n}\n\ntype CreateInertiaAppSSRContent = { head: string[]; body: string }\ntype InertiaAppOptionsForSSR<SharedProps extends PageProps> = BaseInertiaAppOptions & {\n  id?: undefined\n  page: Page | string\n  render: typeof renderToString\n  progress?: undefined\n  setup(options: SetupOptions<null, SharedProps>): ReactInstance\n}\n\nexport default async function createInertiaApp<SharedProps extends PageProps = PageProps>(\n  options: InertiaAppOptionsForCSR<SharedProps>,\n): Promise<CreateInertiaAppSetupReturnType>\nexport default async function createInertiaApp<SharedProps extends PageProps = PageProps>(\n  options: InertiaAppOptionsForSSR<SharedProps>,\n): Promise<CreateInertiaAppSSRContent>\nexport default async function createInertiaApp<SharedProps extends PageProps = PageProps>({\n  id = 'app',\n  resolve,\n  setup,\n  title,\n  progress = {},\n  page,\n  render,\n}: InertiaAppOptionsForCSR<SharedProps> | InertiaAppOptionsForSSR<SharedProps>): Promise<\n  CreateInertiaAppSetupReturnType | CreateInertiaAppSSRContent\n> {\n  const isServer = typeof window === 'undefined'\n  const el = isServer ? null : document.getElementById(id)\n  const initialPage = page || JSON.parse(el.dataset.page)\n  // @ts-expect-error\n  const resolveComponent = (name) => Promise.resolve(resolve(name)).then((module) => module.default || module)\n\n  let head = []\n\n  const reactApp = await Promise.all([\n    resolveComponent(initialPage.component),\n    router.decryptHistory().catch(() => {}),\n  ]).then(([initialComponent]) => {\n    return setup({\n      // @ts-expect-error\n      el,\n      App,\n      props: {\n        initialPage,\n        initialComponent,\n        resolveComponent,\n        titleCallback: title,\n        onHeadUpdate: isServer ? (elements) => (head = elements) : null,\n      },\n    })\n  })\n\n  if (!isServer && progress) {\n    setupProgress(progress)\n  }\n\n  if (isServer) {\n    const body = await render(\n      createElement(\n        'div',\n        {\n          id,\n          'data-page': JSON.stringify(initialPage),\n        },\n        // @ts-expect-error\n        reactApp,\n      ),\n    )\n\n    return { head, body }\n  }\n}\n", "import { createHeadManager, PageHandler, router } from '@inertiajs/core'\nimport { createElement, useEffect, useMemo, useState } from 'react'\nimport HeadContext from './HeadContext'\nimport PageContext from './PageContext'\n\nlet currentIsInitialPage = true\nlet routerIsInitialized = false\nlet swapComponent: PageHandler = async () => {\n  // Dummy function so we can init the router outside of the useEffect hook. This is\n  // needed so `router.reload()` works right away (on mount) in any of the user's\n  // components. We swap in the real function in the useEffect hook below.\n  currentIsInitialPage = false\n}\n\nexport default function App({\n  children,\n  initialPage,\n  initialComponent,\n  resolveComponent,\n  titleCallback,\n  onHeadUpdate,\n}) {\n  const [current, setCurrent] = useState({\n    component: initialComponent || null,\n    page: initialPage,\n    key: null,\n  })\n\n  const headManager = useMemo(() => {\n    return createHeadManager(\n      typeof window === 'undefined',\n      titleCallback || ((title) => title),\n      onHeadUpdate || (() => {}),\n    )\n  }, [])\n\n  if (!routerIsInitialized) {\n    router.init({\n      initialPage,\n      resolveComponent,\n      swapComponent: async (args) => swapComponent(args),\n    })\n\n    routerIsInitialized = true\n  }\n\n  useEffect(() => {\n    swapComponent = async ({ component, page, preserveState }) => {\n      if (currentIsInitialPage) {\n        // We block setting the current page on the initial page to\n        // prevent the initial page from being re-rendered again.\n        currentIsInitialPage = false\n        return\n      }\n\n      setCurrent((current) => ({\n        component,\n        page,\n        key: preserveState ? current.key : Date.now(),\n      }))\n    }\n\n    router.on('navigate', () => headManager.forceUpdate())\n  }, [])\n\n  if (!current.component) {\n    return createElement(\n      HeadContext.Provider,\n      { value: headManager },\n      createElement(PageContext.Provider, { value: current.page }, null),\n    )\n  }\n\n  const renderChildren =\n    children ||\n    (({ Component, props, key }) => {\n      const child = createElement(Component, { key, ...props })\n\n      if (typeof Component.layout === 'function') {\n        return Component.layout(child)\n      }\n\n      if (Array.isArray(Component.layout)) {\n        return Component.layout\n          .concat(child)\n          .reverse()\n          .reduce((children, Layout) => createElement(Layout, { children, ...props }))\n      }\n\n      return child\n    })\n\n  return createElement(\n    HeadContext.Provider,\n    { value: headManager },\n    createElement(\n      PageContext.Provider,\n      { value: current.page },\n      renderChildren({\n        Component: current.component,\n        key: current.key,\n        props: current.page.props,\n      }),\n    ),\n  )\n}\n\nApp.displayName = 'Inertia'\n", "import { createContext } from 'react'\n\nconst headContext = createContext(undefined)\nheadContext.displayName = 'InertiaHeadContext'\n\nexport default headContext\n", "import { createContext } from 'react'\n\nconst pageContext = createContext(undefined)\npageContext.displayName = 'InertiaPageContext'\n\nexport default pageContext\n", "import { ReactElement, useEffect, useMemo, useState } from 'react'\nimport { router } from '.'\nimport usePage from './usePage'\n\nconst urlWithoutHash = (url: URL | Location): URL => {\n  url = new URL(url.href)\n  url.hash = ''\n\n  return url\n}\n\nconst isSameUrlWithoutHash = (url1: URL | Location, url2: URL | Location): boolean => {\n  return urlWithoutHash(url1).href === urlWithoutHash(url2).href\n}\n\ninterface DeferredProps {\n  children: ReactElement | number | string\n  fallback: ReactElement | number | string\n  data: string | string[]\n}\n\nconst Deferred = ({ children, data, fallback }: DeferredProps) => {\n  if (!data) {\n    throw new Error('`<Deferred>` requires a `data` prop to be a string or array of strings')\n  }\n\n  const [loaded, setLoaded] = useState(false)\n  const pageProps = usePage().props\n  const keys = useMemo(() => (Array.isArray(data) ? data : [data]), [data])\n\n  useEffect(() => {\n    const removeListener = router.on('start', (e) => {\n      const isPartialVisit = e.detail.visit.only.length > 0 || e.detail.visit.except.length > 0\n      const isReloadingKey = e.detail.visit.only.find((key) => keys.includes(key))\n\n      if (isSameUrlWithoutHash(e.detail.visit.url, window.location) && (!isPartialVisit || isReloadingKey)) {\n        setLoaded(false)\n      }\n    })\n\n    return () => {\n      removeListener()\n    }\n  }, [])\n\n  useEffect(() => {\n    setLoaded(keys.every((key) => pageProps[key] !== undefined))\n  }, [pageProps, keys])\n\n  return loaded ? children : fallback\n}\n\nDeferred.displayName = 'InertiaDeferred'\n\nexport default Deferred\n", "import { Page, PageProps } from '@inertiajs/core'\nimport { useContext } from 'react'\nimport PageContext from './PageContext'\n\nexport default function usePage<TPageProps extends PageProps = PageProps>(): Page<TPageProps> {\n  const page = useContext(PageContext)\n\n  if (!page) {\n    throw new Error('usePage must be used within the Inertia component')\n  }\n\n  return page\n}\n", "import { escape } from 'es-toolkit'\nimport React, { FunctionComponent, useContext, useEffect, useMemo } from 'react'\nimport HeadContext from './HeadContext'\n\ntype InertiaHeadProps = {\n  title?: string\n  children?: React.ReactNode\n}\n\ntype InertiaHead = FunctionComponent<InertiaHeadProps>\n\nconst Head: InertiaHead = function ({ children, title }) {\n  const headManager = useContext(HeadContext)\n  const provider = useMemo(() => headManager.createProvider(), [headManager])\n  const isServer = typeof window === 'undefined'\n\n  useEffect(() => {\n    provider.reconnect()\n    provider.update(renderNodes(children))\n    return () => {\n      provider.disconnect()\n    }\n  }, [provider, children, title])\n\n  function isUnaryTag(node) {\n    return (\n      [\n        'area',\n        'base',\n        'br',\n        'col',\n        'embed',\n        'hr',\n        'img',\n        'input',\n        'keygen',\n        'link',\n        'meta',\n        'param',\n        'source',\n        'track',\n        'wbr',\n      ].indexOf(node.type) > -1\n    )\n  }\n\n  function renderTagStart(node) {\n    const attrs = Object.keys(node.props).reduce((carry, name) => {\n      if (['head-key', 'children', 'dangerouslySetInnerHTML'].includes(name)) {\n        return carry\n      }\n      const value = String(node.props[name])\n      if (value === '') {\n        return carry + ` ${name}`\n      } else {\n        return carry + ` ${name}=\"${escape(value)}\"`\n      }\n    }, '')\n    return `<${node.type}${attrs}>`\n  }\n\n  function renderTagChildren(node) {\n    return typeof node.props.children === 'string'\n      ? node.props.children\n      : node.props.children.reduce((html, child) => html + renderTag(child), '')\n  }\n\n  function renderTag(node) {\n    let html = renderTagStart(node)\n    if (node.props.children) {\n      html += renderTagChildren(node)\n    }\n    if (node.props.dangerouslySetInnerHTML) {\n      html += node.props.dangerouslySetInnerHTML.__html\n    }\n    if (!isUnaryTag(node)) {\n      html += `</${node.type}>`\n    }\n    return html\n  }\n\n  function ensureNodeHasInertiaProp(node) {\n    return React.cloneElement(node, {\n      inertia: node.props['head-key'] !== undefined ? node.props['head-key'] : '',\n    })\n  }\n\n  function renderNode(node) {\n    return renderTag(ensureNodeHasInertiaProp(node))\n  }\n\n  function renderNodes(nodes) {\n    const computed = React.Children.toArray(nodes)\n      .filter((node) => node)\n      .map((node) => renderNode(node))\n    if (title && !computed.find((tag) => tag.startsWith('<title'))) {\n      computed.push(`<title inertia>${title}</title>`)\n    }\n    return computed\n  }\n\n  if (isServer) {\n    provider.update(renderNodes(children))\n  }\n\n  return null\n}\nexport default Head\n", "import {\n  CacheForOption,\n  FormDataConvertible,\n  LinkPrefetchOption,\n  mergeDataIntoQueryString,\n  Method,\n  PendingVisit,\n  PreserveStateOption,\n  Progress,\n  router,\n  shouldIntercept,\n} from '@inertiajs/core'\nimport { createElement, forwardRef, useEffect, useMemo, useRef, useState } from 'react'\n\nconst noop = () => undefined\n\ninterface BaseInertiaLinkProps {\n  as?: string\n  data?: Record<string, FormDataConvertible>\n  href: string | { url: string; method: Method }\n  method?: Method\n  headers?: Record<string, string>\n  onClick?: (event: React.MouseEvent<Element>) => void\n  preserveScroll?: PreserveStateOption\n  preserveState?: PreserveStateOption\n  replace?: boolean\n  only?: string[]\n  except?: string[]\n  onCancelToken?: (cancelToken: import('axios').CancelTokenSource) => void\n  onBefore?: () => void\n  onStart?: (event: PendingVisit) => void\n  onProgress?: (progress: Progress) => void\n  onFinish?: (event: PendingVisit) => void\n  onCancel?: () => void\n  onSuccess?: () => void\n  onError?: () => void\n  queryStringArrayFormat?: 'indices' | 'brackets'\n  async?: boolean\n  cacheFor?: CacheForOption | CacheForOption[]\n  prefetch?: boolean | LinkPrefetchOption | LinkPrefetchOption[]\n}\n\nexport type InertiaLinkProps = BaseInertiaLinkProps &\n  Omit<React.HTMLAttributes<HTMLElement>, keyof BaseInertiaLinkProps> &\n  Omit<React.AllHTMLAttributes<HTMLElement>, keyof BaseInertiaLinkProps>\n\nconst Link = forwardRef<unknown, InertiaLinkProps>(\n  (\n    {\n      children,\n      as = 'a',\n      data = {},\n      href,\n      method = 'get',\n      preserveScroll = false,\n      preserveState = null,\n      replace = false,\n      only = [],\n      except = [],\n      headers = {},\n      queryStringArrayFormat = 'brackets',\n      async = false,\n      onClick = noop,\n      onCancelToken = noop,\n      onBefore = noop,\n      onStart = noop,\n      onProgress = noop,\n      onFinish = noop,\n      onCancel = noop,\n      onSuccess = noop,\n      onError = noop,\n      prefetch = false,\n      cacheFor = 0,\n      ...props\n    },\n    ref,\n  ) => {\n    const [inFlightCount, setInFlightCount] = useState(0)\n    const hoverTimeout = useRef<number>(null)\n\n    const _method = useMemo(() => {\n      return typeof href === 'object' ? href.method : (method.toLowerCase() as Method)\n    }, [href, method])\n\n    const _as = useMemo(() => {\n      as = as.toLowerCase()\n\n      return _method !== 'get' ? 'button' : as\n    }, [as, _method])\n\n    const mergeDataArray = useMemo(\n      () =>\n        mergeDataIntoQueryString(\n          _method,\n          typeof href === 'object' ? href.url : href || '',\n          data,\n          queryStringArrayFormat,\n        ),\n      [href, _method, data, queryStringArrayFormat],\n    )\n\n    const url = useMemo(() => mergeDataArray[0], [mergeDataArray])\n    const _data = useMemo(() => mergeDataArray[1], [mergeDataArray])\n\n    const baseParams = useMemo(\n      () => ({\n        data: _data,\n        method: _method,\n        preserveScroll,\n        preserveState: preserveState ?? _method !== 'get',\n        replace,\n        only,\n        except,\n        headers,\n        async,\n      }),\n      [_data, _method, preserveScroll, preserveState, replace, only, except, headers, async],\n    )\n\n    const visitParams = useMemo(\n      () => ({\n        ...baseParams,\n        onCancelToken,\n        onBefore,\n        onStart(event) {\n          setInFlightCount((count) => count + 1)\n          onStart(event)\n        },\n        onProgress,\n        onFinish(event) {\n          setInFlightCount((count) => count - 1)\n          onFinish(event)\n        },\n        onCancel,\n        onSuccess,\n        onError,\n      }),\n      [baseParams, onCancelToken, onBefore, onStart, onProgress, onFinish, onCancel, onSuccess, onError],\n    )\n\n    const doPrefetch = () => {\n      router.prefetch(url, baseParams, { cacheFor: cacheForValue })\n    }\n\n    const prefetchModes: LinkPrefetchOption[] = useMemo(\n      () => {\n        if (prefetch === true) {\n          return ['hover']\n        }\n\n        if (prefetch === false) {\n          return []\n        }\n\n        if (Array.isArray(prefetch)) {\n          return prefetch\n        }\n\n        return [prefetch]\n      },\n      Array.isArray(prefetch) ? prefetch : [prefetch],\n    )\n\n    const cacheForValue = useMemo(() => {\n      if (cacheFor !== 0) {\n        // If they've provided a value, respect it\n        return cacheFor\n      }\n\n      if (prefetchModes.length === 1 && prefetchModes[0] === 'click') {\n        // If they've only provided a prefetch mode of 'click',\n        // we should only prefetch for the next request but not keep it around\n        return 0\n      }\n\n      // Otherwise, default to 30 seconds\n      return 30_000\n    }, [cacheFor, prefetchModes])\n\n    useEffect(() => {\n      return () => {\n        clearTimeout(hoverTimeout.current)\n      }\n    }, [])\n\n    useEffect(() => {\n      if (prefetchModes.includes('mount')) {\n        setTimeout(() => doPrefetch())\n      }\n    }, prefetchModes)\n\n    const regularEvents = {\n      onClick: (event) => {\n        onClick(event)\n\n        if (shouldIntercept(event)) {\n          event.preventDefault()\n\n          router.visit(url, visitParams)\n        }\n      },\n    }\n\n    const prefetchHoverEvents = {\n      onMouseEnter: () => {\n        hoverTimeout.current = window.setTimeout(() => {\n          doPrefetch()\n        }, 75)\n      },\n      onMouseLeave: () => {\n        clearTimeout(hoverTimeout.current)\n      },\n      onClick: regularEvents.onClick,\n    }\n\n    const prefetchClickEvents = {\n      onMouseDown: (event) => {\n        if (shouldIntercept(event)) {\n          event.preventDefault()\n          doPrefetch()\n        }\n      },\n      onMouseUp: (event) => {\n        event.preventDefault()\n        router.visit(url, visitParams)\n      },\n      onClick: (event) => {\n        onClick(event)\n\n        if (shouldIntercept(event)) {\n          // Let the mouseup event handle the visit\n          event.preventDefault()\n        }\n      },\n    }\n\n    const elProps = useMemo(\n      () => ({\n        a: { href: url },\n        button: { type: 'button' },\n      }),\n      [url],\n    )\n\n    return createElement(\n      _as,\n      {\n        ...props,\n        ...(elProps[_as] || {}),\n        ref,\n        ...(() => {\n          if (prefetchModes.includes('hover')) {\n            return prefetchHoverEvents\n          }\n\n          if (prefetchModes.includes('click')) {\n            return prefetchClickEvents\n          }\n\n          return regularEvents\n        })(),\n        'data-loading': inFlightCount > 0 ? '' : undefined,\n      },\n      children,\n    )\n  },\n)\nLink.displayName = 'InertiaLink'\n\nexport default Link\n", "import {\n  FormDataConvertible,\n  FormDataKeys,\n  FormDataValues,\n  Method,\n  Progress,\n  router,\n  VisitOptions,\n} from '@inertiajs/core'\nimport { cloneDeep, isEqual } from 'es-toolkit'\nimport { get, has, set } from 'es-toolkit/compat'\nimport { useCallback, useEffect, useLayoutEffect, useMemo, useRef, useState } from 'react'\nimport useRemember from './useRemember'\n\nexport type SetDataByObject<TForm> = (data: TForm) => void\nexport type SetDataByMethod<TForm> = (data: (previousData: TForm) => TForm) => void\nexport type SetDataByKeyValuePair<TForm extends Record<any, any>> = <K extends FormDataKeys<TForm>>(key: K, value: FormDataValues<TForm, K>) => void\nexport type SetDataAction<TForm extends Record<any, any>> = SetDataByObject<TForm> & SetDataByMethod<TForm> & SetDataByKeyValuePair<TForm>\n\ntype FormDataType = Record<string, FormDataConvertible>\ntype FormOptions = Omit<VisitOptions, 'data'>\n\nexport interface InertiaFormProps<TForm extends FormDataType> {\n  data: TForm\n  isDirty: boolean\n  errors: Partial<Record<FormDataKeys<TForm>, string>>\n  hasErrors: boolean\n  processing: boolean\n  progress: Progress | null\n  wasSuccessful: boolean\n  recentlySuccessful: boolean\n  setData: SetDataAction<TForm>\n  transform: (callback: (data: TForm) => object) => void\n  setDefaults(): void\n  setDefaults(field: FormDataKeys<TForm>, value: FormDataConvertible): void\n  setDefaults(fields: Partial<TForm>): void\n  reset: (...fields: FormDataKeys<TForm>[]) => void\n  clearErrors: (...fields: FormDataKeys<TForm>[]) => void\n  resetAndClearErrors: (...fields: FormDataKeys<TForm>[]) => void\n  setError(field: FormDataKeys<TForm>, value: string): void\n  setError(errors: Record<FormDataKeys<TForm>, string>): void\n  submit: (...args: [Method, string, FormOptions?] | [{ url: string; method: Method }, FormOptions?]) => void\n  get: (url: string, options?: FormOptions) => void\n  patch: (url: string, options?: FormOptions) => void\n  post: (url: string, options?: FormOptions) => void\n  put: (url: string, options?: FormOptions) => void\n  delete: (url: string, options?: FormOptions) => void\n  cancel: () => void\n}\nexport default function useForm<TForm extends FormDataType>(initialValues?: TForm): InertiaFormProps<TForm>\nexport default function useForm<TForm extends FormDataType>(\n  rememberKey: string,\n  initialValues?: TForm,\n): InertiaFormProps<TForm>\nexport default function useForm<TForm extends FormDataType>(\n  rememberKeyOrInitialValues?: string | TForm,\n  maybeInitialValues?: TForm,\n): InertiaFormProps<TForm> {\n  const isMounted = useRef(null)\n  const rememberKey = typeof rememberKeyOrInitialValues === 'string' ? rememberKeyOrInitialValues : null\n  const [defaults, setDefaults] = useState(\n    (typeof rememberKeyOrInitialValues === 'string' ? maybeInitialValues : rememberKeyOrInitialValues) || ({} as TForm),\n  )\n  const cancelToken = useRef(null)\n  const recentlySuccessfulTimeoutId = useRef(null)\n  const [data, setData] = rememberKey ? useRemember(defaults, `${rememberKey}:data`) : useState(defaults)\n  const [errors, setErrors] = rememberKey\n    ? useRemember({} as Partial<Record<FormDataKeys<TForm>, string>>, `${rememberKey}:errors`)\n    : useState({} as Partial<Record<FormDataKeys<TForm>, string>>)\n  const [hasErrors, setHasErrors] = useState(false)\n  const [processing, setProcessing] = useState(false)\n  const [progress, setProgress] = useState(null)\n  const [wasSuccessful, setWasSuccessful] = useState(false)\n  const [recentlySuccessful, setRecentlySuccessful] = useState(false)\n  const transform = useRef((data) => data)\n  const isDirty = useMemo(() => !isEqual(data, defaults), [data, defaults])\n\n  useEffect(() => {\n    isMounted.current = true\n    return () => {\n      isMounted.current = false\n    }\n  }, [])\n\n  const submit = useCallback(\n    (...args) => {\n      const objectPassed = typeof args[0] === 'object'\n\n      const method = objectPassed ? args[0].method : args[0]\n      const url = objectPassed ? args[0].url : args[1]\n      const options = (objectPassed ? args[1] : args[2]) ?? {}\n\n      const _options = {\n        ...options,\n        onCancelToken: (token) => {\n          cancelToken.current = token\n\n          if (options.onCancelToken) {\n            return options.onCancelToken(token)\n          }\n        },\n        onBefore: (visit) => {\n          setWasSuccessful(false)\n          setRecentlySuccessful(false)\n          clearTimeout(recentlySuccessfulTimeoutId.current)\n\n          if (options.onBefore) {\n            return options.onBefore(visit)\n          }\n        },\n        onStart: (visit) => {\n          setProcessing(true)\n\n          if (options.onStart) {\n            return options.onStart(visit)\n          }\n        },\n        onProgress: (event) => {\n          setProgress(event)\n\n          if (options.onProgress) {\n            return options.onProgress(event)\n          }\n        },\n        onSuccess: (page) => {\n          if (isMounted.current) {\n            setProcessing(false)\n            setProgress(null)\n            setErrors({})\n            setHasErrors(false)\n            setWasSuccessful(true)\n            setRecentlySuccessful(true)\n            setDefaults(cloneDeep(data))\n            recentlySuccessfulTimeoutId.current = setTimeout(() => {\n              if (isMounted.current) {\n                setRecentlySuccessful(false)\n              }\n            }, 2000)\n          }\n\n          if (options.onSuccess) {\n            return options.onSuccess(page)\n          }\n        },\n        onError: (errors) => {\n          if (isMounted.current) {\n            setProcessing(false)\n            setProgress(null)\n            setErrors(errors)\n            setHasErrors(true)\n          }\n\n          if (options.onError) {\n            return options.onError(errors)\n          }\n        },\n        onCancel: () => {\n          if (isMounted.current) {\n            setProcessing(false)\n            setProgress(null)\n          }\n\n          if (options.onCancel) {\n            return options.onCancel()\n          }\n        },\n        onFinish: (visit) => {\n          if (isMounted.current) {\n            setProcessing(false)\n            setProgress(null)\n          }\n\n          cancelToken.current = null\n\n          if (options.onFinish) {\n            return options.onFinish(visit)\n          }\n        },\n      }\n\n      if (method === 'delete') {\n        router.delete(url, { ..._options, data: transform.current(data) })\n      } else {\n        router[method](url, transform.current(data), _options)\n      }\n    },\n    [data, setErrors, transform],\n  )\n\n  const setDataFunction = useCallback(\n    (keyOrData: FormDataKeys<TForm> | Function | TForm, maybeValue?: any) => {\n      if (typeof keyOrData === 'string') {\n        setData((data) => set(cloneDeep(data), keyOrData, maybeValue))\n      } else if (typeof keyOrData === 'function') {\n        setData((data) => keyOrData(data))\n      } else {\n        setData(keyOrData as TForm)\n      }\n    },\n    [setData],\n  )\n\n  const [dataAsDefaults, setDataAsDefaults] = useState(false)\n\n  const setDefaultsFunction = useCallback(\n    (fieldOrFields?: FormDataKeys<TForm> | Partial<TForm>, maybeValue?: FormDataConvertible) => {\n      if (typeof fieldOrFields === 'undefined') {\n        setDefaults(data)\n        // If setData was called right before setDefaults, data was not\n        // updated in that render yet, so we set a flag to update\n        // defaults right after the next render.\n        setDataAsDefaults(true)\n      } else {\n        setDefaults((defaults) => {\n          return typeof fieldOrFields === 'string'\n            ? set(cloneDeep(defaults), fieldOrFields, maybeValue)\n            : Object.assign(cloneDeep(defaults), fieldOrFields)\n        })\n      }\n    },\n    [data, setDefaults],\n  )\n\n  useLayoutEffect(() => {\n    if (!dataAsDefaults) {\n      return\n    }\n\n    if (isDirty) {\n      // Data has been updated in this next render and is different from\n      // the defaults, so now we can set defaults to the current data.\n      setDefaults(data)\n    }\n\n    setDataAsDefaults(false)\n  }, [dataAsDefaults])\n\n  const reset = useCallback(\n    (...fields) => {\n      if (fields.length === 0) {\n        setData(defaults)\n      } else {\n        setData((data) =>\n          (fields as Array<FormDataKeys<TForm>>)\n            .filter((key) => has(defaults, key))\n            .reduce(\n              (carry, key) => {\n                return set(carry, key, get(defaults, key))\n              },\n              { ...data } as TForm,\n            ),\n        )\n      }\n    },\n    [setData, defaults],\n  )\n\n  const setError = useCallback(\n    (fieldOrFields: FormDataKeys<TForm> | Record<FormDataKeys<TForm>, string>, maybeValue?: string) => {\n      setErrors((errors) => {\n        const newErrors = {\n          ...errors,\n          ...(typeof fieldOrFields === 'string'\n            ? { [fieldOrFields]: maybeValue }\n            : (fieldOrFields as Record<FormDataKeys<TForm>, string>)),\n        }\n        setHasErrors(Object.keys(newErrors).length > 0)\n        return newErrors\n      })\n    },\n    [setErrors, setHasErrors],\n  )\n\n  const clearErrors = useCallback(\n    (...fields) => {\n      setErrors((errors) => {\n        const newErrors = (Object.keys(errors) as Array<FormDataKeys<TForm>>).reduce(\n          (carry, field) => ({\n            ...carry,\n            ...(fields.length > 0 && !fields.includes(field) ? { [field]: errors[field] } : {}),\n          }),\n          {},\n        )\n        setHasErrors(Object.keys(newErrors).length > 0)\n        return newErrors\n      })\n    },\n    [setErrors, setHasErrors],\n  )\n\n  const resetAndClearErrors = useCallback(\n    (...fields) => {\n      reset(...fields)\n      clearErrors(...fields)\n    },\n    [reset, clearErrors],\n  )\n\n  const createSubmitMethod = (method) => (url, options) => {\n    submit(method, url, options)\n  }\n  const getMethod = useCallback(createSubmitMethod('get'), [submit])\n  const post = useCallback(createSubmitMethod('post'), [submit])\n  const put = useCallback(createSubmitMethod('put'), [submit])\n  const patch = useCallback(createSubmitMethod('patch'), [submit])\n  const deleteMethod = useCallback(createSubmitMethod('delete'), [submit])\n\n  const cancel = useCallback(() => {\n    if (cancelToken.current) {\n      cancelToken.current.cancel()\n    }\n  }, [])\n\n  const transformFunction = useCallback((callback) => {\n    transform.current = callback\n  }, [])\n\n  return {\n    data,\n    setData: setDataFunction,\n    isDirty,\n    errors,\n    hasErrors,\n    processing,\n    progress,\n    wasSuccessful,\n    recentlySuccessful,\n    transform: transformFunction,\n    setDefaults: setDefaultsFunction,\n    reset,\n    setError,\n    clearErrors,\n    resetAndClearErrors,\n    submit,\n    get: getMethod,\n    post,\n    put,\n    patch,\n    delete: deleteMethod,\n    cancel,\n  }\n}\n", "import { router } from '@inertiajs/core'\nimport { Dispatch, SetStateAction, useEffect, useState } from 'react'\n\nexport default function useRemember<State>(\n  initialState: State,\n  key?: string,\n): [State, Dispatch<SetStateAction<State>>] {\n  const [state, setState] = useState(() => {\n    const restored = router.restore(key) as State\n\n    return restored !== undefined ? restored : initialState\n  })\n\n  useEffect(() => {\n    router.remember(state, key)\n  }, [state, key])\n\n  return [state, setState]\n}\n", "import { PollOptions, ReloadOptions, router } from '@inertiajs/core'\nimport { useEffect, useRef } from 'react'\n\nexport default function usePoll(\n  interval: number,\n  requestOptions: ReloadOptions = {},\n  options: PollOptions = {\n    keepAlive: false,\n    autoStart: true,\n  },\n) {\n  const pollRef = useRef(\n    router.poll(interval, requestOptions, {\n      ...options,\n      autoStart: false,\n    }),\n  )\n\n  useEffect(() => {\n    if (options.autoStart ?? true) {\n      pollRef.current.start()\n    }\n\n    return () => pollRef.current.stop()\n  }, [])\n\n  return {\n    stop: pollRef.current.stop,\n    start: pollRef.current.start,\n  }\n}\n", "import { router, VisitOptions } from '@inertiajs/core'\nimport { useEffect, useState } from 'react'\n\nexport default function usePrefetch(options: VisitOptions = {}): {\n  lastUpdatedAt: number | null\n  isPrefetching: boolean\n  isPrefetched: boolean\n  flush: () => void\n} {\n  const cached = typeof window === 'undefined' ? null : router.getCached(window.location.pathname, options)\n  const inFlight = typeof window === 'undefined' ? null : router.getPrefetching(window.location.pathname, options)\n\n  const [lastUpdatedAt, setLastUpdatedAt] = useState<number | null>(cached?.staleTimestamp || null)\n  const [isPrefetching, setIsPrefetching] = useState(inFlight !== null)\n  const [isPrefetched, setIsPrefetched] = useState(cached !== null)\n\n  useEffect(() => {\n    const onPrefetchingListener = router.on('prefetching', (e) => {\n      if (e.detail.visit.url.pathname === window.location.pathname) {\n        setIsPrefetching(true)\n      }\n    })\n\n    const onPrefetchedListener = router.on('prefetched', (e) => {\n      if (e.detail.visit.url.pathname === window.location.pathname) {\n        setIsPrefetching(false)\n        setIsPrefetched(true)\n        setLastUpdatedAt(e.detail.fetchedAt)\n      }\n    })\n\n    return () => {\n      onPrefetchedListener()\n      onPrefetchingListener()\n    }\n  }, [])\n\n  return {\n    lastUpdatedAt,\n    isPrefetching,\n    isPrefetched,\n    flush: () => router.flush(window.location.pathname, options),\n  }\n}\n", "import { ReloadOptions, router } from '@inertiajs/core'\nimport { createElement, ReactElement, useCallback, useEffect, useRef, useState } from 'react'\n\ninterface WhenVisibleProps {\n  children: ReactElement | number | string\n  fallback: ReactElement | number | string\n  data?: string | string[]\n  params?: ReloadOptions\n  buffer?: number\n  as?: string\n  always?: boolean\n}\n\nconst WhenVisible = ({ children, data, params, buffer, as, always, fallback }: WhenVisibleProps) => {\n  always = always ?? false\n  as = as ?? 'div'\n  fallback = fallback ?? null\n\n  const [loaded, setLoaded] = useState(false)\n  const hasFetched = useRef<boolean>(false)\n  const fetching = useRef<boolean>(false)\n  const ref = useRef<HTMLDivElement>(null)\n\n  const getReloadParams = useCallback<() => Partial<ReloadOptions>>(() => {\n    if (data) {\n      return {\n        only: (Array.isArray(data) ? data : [data]) as string[],\n      }\n    }\n\n    if (!params) {\n      throw new Error('You must provide either a `data` or `params` prop.')\n    }\n\n    return params\n  }, [params, data])\n\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n\n    const observer = new IntersectionObserver(\n      (entries) => {\n        if (!entries[0].isIntersecting) {\n          return\n        }\n\n        if (!always && hasFetched.current) {\n          observer.disconnect()\n        }\n\n        if (fetching.current) {\n          return\n        }\n\n        hasFetched.current = true\n        fetching.current = true\n\n        const reloadParams = getReloadParams()\n\n        router.reload({\n          ...reloadParams,\n          onStart: (e) => {\n            fetching.current = true\n            reloadParams.onStart?.(e)\n          },\n          onFinish: (e) => {\n            setLoaded(true)\n            fetching.current = false\n            reloadParams.onFinish?.(e)\n\n            if (!always) {\n              observer.disconnect()\n            }\n          },\n        })\n      },\n      {\n        rootMargin: `${buffer || 0}px`,\n      },\n    )\n\n    observer.observe(ref.current)\n\n    return () => {\n      observer.disconnect()\n    }\n  }, [ref, getReloadParams, buffer])\n\n  if (always || !loaded) {\n    return createElement(\n      as,\n      {\n        props: null,\n        ref,\n      },\n      loaded ? children : fallback,\n    )\n  }\n\n  return loaded ? children : null\n}\n\nWhenVisible.displayName = 'InertiaWhenVisible'\n\nexport default WhenVisible\n"],
  "mappings": "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",
  "names": ["router", "createElement", "createContext", "current", "children", "router", "createElement", "useEffect", "useMemo", "useState", "useState", "useMemo", "useEffect", "router", "useContext", "useEffect", "useMemo", "useContext", "useMemo", "useEffect", "router", "createElement", "useEffect", "useMemo", "useState", "router", "useEffect", "useMemo", "useRef", "useState", "router", "useEffect", "useState", "useRef", "useState", "data", "useMemo", "useEffect", "errors", "router", "defaults", "router", "useEffect", "useRef", "router", "useEffect", "useState", "router", "createElement", "useCallback", "useEffect", "useRef", "useState", "router"]
}
